// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DraftTeamsContainer should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    draftTeams={
        Array [
            Object {},
            Object {},
            Object {},
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Draggable
          data={undefined}
          enabled={true}
          type="team"
>
          <Unknown
                    name={undefined}
          />
</Draggable>,
        <Draggable
          data={undefined}
          enabled={true}
          type="team"
>
          <Unknown
                    name={undefined}
          />
</Draggable>,
        <Draggable
          data={undefined}
          enabled={true}
          type="team"
>
          <Unknown
                    name={undefined}
          />
</Draggable>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "children": <Unknown
            name={undefined}
/>,
          "data": undefined,
          "enabled": true,
          "type": "team",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "name": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "children": <Unknown
            name={undefined}
/>,
          "data": undefined,
          "enabled": true,
          "type": "team",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "name": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "children": <Unknown
            name={undefined}
/>,
          "data": undefined,
          "enabled": true,
          "type": "team",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "name": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Draggable
            data={undefined}
            enabled={true}
            type="team"
>
            <Unknown
                        name={undefined}
            />
</Draggable>,
          <Draggable
            data={undefined}
            enabled={true}
            type="team"
>
            <Unknown
                        name={undefined}
            />
</Draggable>,
          <Draggable
            data={undefined}
            enabled={true}
            type="team"
>
            <Unknown
                        name={undefined}
            />
</Draggable>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "children": <Unknown
              name={undefined}
/>,
            "data": undefined,
            "enabled": true,
            "type": "team",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "name": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "children": <Unknown
              name={undefined}
/>,
            "data": undefined,
            "enabled": true,
            "type": "team",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "name": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "children": <Unknown
              name={undefined}
/>,
            "data": undefined,
            "enabled": true,
            "type": "team",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "name": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
